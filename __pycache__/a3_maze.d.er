##[pylyzer] failed a3_maze.py 1691681534 4167
.json = pyimport "json"

.Maze: ClassType
.Maze.num_cols: Never
.Maze.num_rows: Never
.Maze.cells: Never
.Maze.num_cells: Never
.Maze.walls: Never
.Maze.__call__: (num_rows: Obj, num_cols: Obj, num_cells: Obj, cells: Obj, walls: Obj) -> .Maze
.Maze.get_num_rows: |Type_24 <: Structural({.num_rows = Type_71}), Type_71: Type|(self: Type_24) -> Type_71
.Maze.get_num_cols: |Type_73: Type, Type_27 <: Structural({.num_cols = Type_73})|(self: Type_27) -> Type_73
.Maze.get_cell: |O <: Structural({.__add__ = (self: Never, R) -> O}), Type_30 <: Structural({.num_cols = R}), R: Type, O: Type|(self: Type_30, row: Structural({.__mul__ = (self: Never, R) -> O}), col: R) -> O
.Maze.get_row: |Type_35 <: Structural({.num_cols = R}), R: Type, O: Type|(self: Type_35, cell_number: Structural({.__floordiv__ = (self: Never, R) -> O})) -> O
.Maze.get_col: |R: Type, O: Type, Type_39 <: Structural({.num_cols = R})|(self: Type_39, cell_number: Structural({.__mod__ = (self: Never, R) -> O})) -> O
.Maze.get_left: |Type_101 <: Structural({.__getitem__ = (self: Obj, R) -> Type_103}), Type_103 <: Structural({.__getitem__ = (self: Obj, Type_44) -> Type_105}), R :> Int, Type_44: Type, Type_43 <: Structural({.walls = Type_101}), Type_105: Type|(self: Type_43, cell_number: Type_44) -> R
.Maze.get_right: |Type_130 <: Structural({.__getitem__ = (self: Obj, Type_48) -> Type_132}), R :> Int, Type_47 <: Structural({.walls = Type_128}), Type_48: Type, Type_132: Type, Type_128 <: Structural({.__getitem__ = (self: Obj, R) -> Type_130})|(self: Type_47, cell_number: Type_48) -> R
.Maze.get_up: |Type_156 <: Structural({.__getitem__ = (self: Obj, Type_52) -> Type_158}), Type_52: Type, R :> Int, Type_158: Type, Type_51 <: Structural({.walls = Type_154}), Type_154 <: Structural({.__getitem__ = (self: Obj, R) -> Type_156})|(self: Type_51, cell_number: Type_52) -> R
.Maze.get_down: |Type_56: Type, Type_185: Type, R :> Int, Type_181 <: Structural({.__getitem__ = (self: Obj, R) -> Type_183}), Type_55 <: Structural({.walls = Type_181}), Type_183 <: Structural({.__getitem__ = (self: Obj, Type_56) -> Type_185})|(self: Type_55, cell_number: Type_56) -> R
.Maze.mark_cell: |Type_194 :> {True, }, Type_60: Type, Type_59 <: Structural({.cells = Type_192}), Type_195: Type, Type_192 <: Structural({.__setitem__ = (self: Obj, Type_60, Type_194) -> Type_195})|(self: Type_59, cell_number: Type_60) -> Type_195
.Maze.unmark_cell: |Type_200 :> {False, }, Type_64: Type, Type_63 <: Structural({.cells = Type_198}), Type_201: Type, Type_198 <: Structural({.__setitem__ = (self: Obj, Type_64, Type_200) -> Type_201})|(self: Type_63, cell_number: Type_64) -> Type_201
.Maze.get_is_marked: |Type_68: Type, Type_206: Type, Type_67 <: Structural({.cells = Type_204}), Type_204 <: Structural({.__getitem__ = (self: Obj, Type_68) -> Type_206})|(self: Type_67, cell_number: Type_68) -> Type_206

.print_pathfile: (filename: PathLike, result: Obj, row: Obj, col: Obj) -> Never
.print_mazefile: |Type_234 <: NoneType, T: Type, Type_10 <: Structural({.__setitem__ = (self: Obj, T, Type_233) -> Type_234}), Type_233 :> Array(T, _: Nat), T :> Int|(filename: PathLike, walls: Type_10, row: Obj, col: Obj, start: Obj, end: Obj) -> Never
